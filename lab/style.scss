// ==== üå§Ô∏è SCSS Variables - Define reusable values ====
$primary-color: #e67e22;
$secondary-color: #f39c12;
$background-gradient: linear-gradient(120deg, #f6d365, #fda085);
$border-radius: 0.5rem;
$box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
$font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
$transition-duration: 0.3s;

// ==== üé® Mixins - Reusable code blocks ====
@mixin button-style($bg-color: $primary-color, $text-color: white) {
  padding: 0.75rem 1.5rem;
  background-color: $bg-color;
  color: $text-color;
  border: none;
  border-radius: $border-radius;
  cursor: pointer;
  transition: all $transition-duration ease;
  
  &:hover {
    background-color: darken($bg-color, 10%);
    transform: translateY(-2px);
  }
}

@mixin fade-in($duration: 0.3s) {
  animation: fadeIn $duration ease-in;
}

@mixin input-style {
  width: 100%;
  padding: 0.75rem;
  border: 2px solid lighten($primary-color, 20%);
  border-radius: $border-radius;
  font-size: 1rem;
  margin-bottom: 1rem;
  transition: all $transition-duration ease;
  
  &:focus {
    outline: none;
    border-color: $primary-color;
    box-shadow: 0 0 0 3px rgba($primary-color, 0.2);
  }
}

// ==== üå§Ô∏è Base Styles using variables ====
body {
  font-family: $font-family;
  background: $background-gradient;
  height: 100vh;
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: column;
}

// ==== üì¶ Container with nested styles ====
.container {
  background: white;
  padding: 2rem;
  border-radius: $border-radius;
  box-shadow: $box-shadow;
  width: 320px;
  text-align: center;
  display: flex;
  justify-content: center;
  flex-direction: column;
  
  // Nested h1 styles
  h1 {
    margin-bottom: 1rem;
    color: $primary-color;
    font-size: 2rem;
    font-weight: 600;
  }
  
  // Nested input-group styles
  .input-group {
    margin-bottom: 1rem;
  }
}

// ==== üîé Input Field using mixin ====
input {
  @include input-style();
}

// ==== üîò Button using mixin ====
button {
  @include button-style();
  width: 100%;
}

// ==== üå¶Ô∏è Weather Info with SCSS functions ====
.weather {
  margin-top: 1.5rem;
  padding: 1.5rem;
  background: white;
  border-radius: $border-radius;
  box-shadow: $box-shadow;
  border-left: 4px solid $primary-color;
  @include fade-in();
  
  // Nested weather elements
  img {
    margin-top: 0.5rem;
    width: 80px;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
  }
  
  .temperature {
    font-size: 2rem;
    font-weight: bold;
    color: $primary-color;
    margin: 0.5rem 0;
  }
  
  .description {
    color: lighten($primary-color, 20%);
    font-size: 1.1rem;
    margin-bottom: 0.5rem;
  }
  
  .location {
    color: darken($primary-color, 10%);
    font-weight: 500;
    font-size: 1.2rem;
  }
}

// ==== üß† Dropdown Suggestions with nesting ====
.dropdown {
  position: relative;
  
  #suggestions {
    list-style: none;
    padding: 0;
    margin: 0;
    position: absolute;
    width: 100%;
    max-height: 150px;
    overflow-y: auto;
    background-color: white;
    border: 2px solid $secondary-color;
    border-top: none;
    border-radius: 0 0 $border-radius $border-radius;
    z-index: 1000;
    display: none;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    
    // Nested list item styles
    li {
      padding: 0.6rem;
      cursor: pointer;
      border-bottom: 1px solid #eee;
      transition: background-color 0.2s ease;
      
      &:last-child {
        border-bottom: none;
      }
      
      &:hover {
        background-color: lighten($primary-color, 45%);
      }
    }
  }
}

// ==== üé¨ Animations ====
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// ==== üì± Responsive Design with SCSS ====
@media (max-width: 480px) {
  .container {
    width: 90%;
    padding: 1.5rem;
    
    h1 {
      font-size: 1.5rem;
    }
  }
  
  .weather {
    padding: 1rem;
    
    .temperature {
      font-size: 1.5rem;
    }
    
    img {
      width: 60px;
    }
  }
}

// ==== üåô Dark Theme Example (Stretch Goal) ====
// Uncomment to see dark theme in action
/*
$dark-bg: #1a1a1a;
$dark-text: #ffffff;
$dark-primary: #ff6b35;

body.dark-theme {
  background: linear-gradient(120deg, #2c3e50, #34495e);
  
  .container {
    background: $dark-bg;
    color: $dark-text;
  }
  
  .weather {
    background: lighten($dark-bg, 5%);
    border-left-color: $dark-primary;
  }
  
  input {
    background: lighten($dark-bg, 10%);
    color: $dark-text;
    border-color: $dark-primary;
  }
  
  button {
    @include button-style($dark-primary);
  }
}
*/ 