// ==== ðŸŽ¨ SCSS Mixins Partial ====
// This file contains reusable mixins for common patterns
// Import it in your main style.scss with: @import 'mixins';

// Button mixin with customizable colors
@mixin button-style($bg-color: $primary-color, $text-color: white, $hover-darken: 10%) {
  padding: $spacing-lg $spacing-xl;
  background-color: $bg-color;
  color: $text-color;
  border: none;
  border-radius: $border-radius;
  cursor: pointer;
  transition: all $transition-duration $transition-timing;
  font-size: $font-size-base;
  font-weight: 500;
  
  &:hover {
    background-color: darken($bg-color, $hover-darken);
    transform: translateY(-2px);
    box-shadow: $box-shadow-light;
  }
  
  &:active {
    transform: translateY(0);
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }
}

// Input field mixin
@mixin input-style($border-color: lighten($primary-color, 20%)) {
  width: 100%;
  padding: $spacing-lg;
  border: 2px solid $border-color;
  border-radius: $border-radius;
  font-size: $font-size-base;
  transition: all $transition-duration $transition-timing;
  background-color: $white;
  
  &:focus {
    outline: none;
    border-color: $primary-color;
    box-shadow: 0 0 0 3px rgba($primary-color, 0.2);
  }
  
  &::placeholder {
    color: $light-text;
  }
}

// Card mixin for weather info and containers
@mixin card-style($bg-color: $white, $shadow: $box-shadow) {
  background: $bg-color;
  border-radius: $border-radius;
  box-shadow: $shadow;
  padding: $spacing-xl;
}

// Fade-in animation mixin
@mixin fade-in($duration: 0.3s, $delay: 0s) {
  animation: fadeIn $duration $transition-timing $delay;
}

// Responsive breakpoint mixins
@mixin mobile {
  @media (max-width: $breakpoint-sm) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$breakpoint-sm + 1px}) and (max-width: $breakpoint-md) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$breakpoint-md + 1px}) {
    @content;
  }
}

// Flexbox utility mixins
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

// Text utility mixins
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-gradient($gradient) {
  background: $gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

// Hover effects mixin
@mixin hover-lift($distance: -4px) {
  transition: transform $transition-duration $transition-timing;
  
  &:hover {
    transform: translateY($distance);
  }
}

// Focus styles mixin for accessibility
@mixin focus-visible($color: $primary-color) {
  &:focus-visible {
    outline: 2px solid $color;
    outline-offset: 2px;
  }
} 